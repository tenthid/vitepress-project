import{_ as e,c as t,o as i,U as o}from"./chunks/framework.EUmXWpxD.js";const _=JSON.parse('{"title":"Project - Project Guide","description":"","frontmatter":{"layout":"doc","title":"Project - Project Guide","prev":{"text":"Project Making","link":"./projectmaking"},"next":{"text":"Project Submission","link":"./projectsubmission"}},"headers":[],"relativePath":"coba/meeting-15and16/projectguide.md","filePath":"coba/meeting-15and16/projectguide.md"}'),a={name:"coba/meeting-15and16/projectguide.md"},c=o('<h1 id="project-guide" tabindex="-1">Project Guide <a class="header-anchor" href="#project-guide" aria-label="Permalink to &quot;Project Guide&quot;">â€‹</a></h1><p>As a guide, you can utilize several programming concepts for the following:</p><ul><li><code>Data types and variables</code>: to store data, including characters and numbers.</li><li><code>String, input, and output</code>: to prompt user input for menu selection, then verify if the given input meets specified criteria.</li><li><code>Arithmetic operators</code>: involving numeric data and input validation.</li><li><code>Selection</code>: checking a condition to see if it meets certain criteria.</li><li><code>Repetition</code>: looping, for instance, repeating if the input is incorrect.</li><li><code>Array</code>: storing multiple data items.</li><li><code>Function</code>: creating separate functions to be used multiple times within the program.</li><li><code>Sorting</code>: arranging data, such as sorting the data stored in an array.</li><li><code>Searching</code>: performing searches within data stored in an array.</li></ul><div class="tip custom-block"><p class="custom-block-title">Optional</p><p>If you&#39;d like extra points, you can implement the OOP concepts you&#39;ve learned earlier.</p></div>',4),n=[c];function r(d,s,l,p,u,m){return i(),t("div",null,n)}const h=e(a,[["render",r]]);export{_ as __pageData,h as default};
