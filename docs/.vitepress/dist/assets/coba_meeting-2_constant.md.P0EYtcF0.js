import{_ as s,c as a,o as i,U as e}from"./chunks/framework.EUmXWpxD.js";const u=JSON.parse('{"title":"Data Types and Variables - Types of Data","description":"","frontmatter":{"layout":"doc","title":"Data Types and Variables - Types of Data","prev":{"text":"Variables","link":"./variables"},"next":{"text":"Meeting 3 - Introduction","link":"../meeting-3/introduction"}},"headers":[],"relativePath":"coba/meeting-2/constant.md","filePath":"coba/meeting-2/constant.md"}'),t={name:"coba/meeting-2/constant.md"},n=e(`<h1 id="constant" tabindex="-1">Constant <a class="header-anchor" href="#constant" aria-label="Permalink to &quot;Constant&quot;">​</a></h1><p><code>Constant</code> is a value that remains unchanged during the execution of a program. Once defined, its value cannot be modified or reassigned throughout the program&#39;s execution. Constants are used to hold values that are expected to remain the same throughout the program&#39;s lifetime.</p><details class="details custom-block"><summary>Points</summary><ul><li>Once a constant is defined and assigned a value, that value <strong>cannot be altered or modified</strong>.</li><li>Constants are used to <strong>represent fixed values</strong> that are not expected to change during the execution of a program. Examples include mathematical constants (like π or e), fixed configuration parameters, or values used in algorithms that shouldn&#39;t be modified.</li><li>In many programming languages, constants are named using <strong>uppercase</strong> letters with <strong>underscores</strong> to separate words, enhancing readability and distinguishing them from variables.</li></ul></details><h2 id="how-to-write-constant" tabindex="-1">How to write constant <a class="header-anchor" href="#how-to-write-constant" aria-label="Permalink to &quot;How to write constant&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">In Python</p><p>There is no strict concept of constant variables like in some other programming languages. However, it is a convention to use uppercase variable names for constants to indicate that their values should not be changed. While the language does not enforce immutability, using uppercase names for constants is a widely accepted practice among Python developers.</p></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-D5lV0" id="tab-40KNg1s" checked="checked"><label for="tab-40KNg1s">C</label><input type="radio" name="group-D5lV0" id="tab-C3mVDVZ"><label for="tab-C3mVDVZ">C++</label><input type="radio" name="group-D5lV0" id="tab-Qo6gzGL"><label for="tab-Qo6gzGL">Java</label><input type="radio" name="group-D5lV0" id="tab-W0-Q3Ii"><label for="tab-W0-Q3Ii">Python</label></div><div class="blocks"><div class="language-c vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PI</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.14159</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MAX_VALUE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span></code></pre></div><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.14159</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAX_VALUE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">final</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.14159</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">final</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAX_VALUE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.14159</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MAX_VALUE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span></span></code></pre></div></div></div><h2 id="naming-convetions" tabindex="-1">Naming Convetions <a class="header-anchor" href="#naming-convetions" aria-label="Permalink to &quot;Naming Convetions&quot;">​</a></h2><p><code>Naming convetions</code> refer to a set of rules and guidelines used for naming variables, functions, classes, and other elements within a program&#39;s codebase. These conventions aim to create consistency, readability, and maintainability in the code by establishing a standardized way to name different entities.</p><details class="details custom-block"><summary>Pascal Case</summary><ul><li>capitalizes the first letter of each word in the identifier, including the first word, without using any separators.</li><li>example: int <strong>NumberOfStudents</strong></li></ul></details><details class="details custom-block"><summary>camelCase</summary><ul><li>he first letter of the first word remains lowercase, and subsequent words have their first letter capitalized. No separators are used</li><li>example: string <strong>fruitName</strong></li></ul></details><details class="details custom-block"><summary>camelCase</summary><ul><li>words are written in lowercase and separated by underscores (_). In Python, it is common practice for developers to use snake_case when declaring variables</li><li>example: int <strong>number_of_students</strong></li></ul></details>`,11),l=[n];function o(r,h,d,p,c,k){return i(),a("div",null,l)}const m=s(t,[["render",o]]);export{u as __pageData,m as default};
