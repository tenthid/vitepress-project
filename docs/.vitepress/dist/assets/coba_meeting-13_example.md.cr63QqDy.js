import{_ as t,c as e,o,U as a}from"./chunks/framework.EUmXWpxD.js";const g=JSON.parse('{"title":"Object-Oriented Programing Part 1 - Example","description":"","frontmatter":{"layout":"doc","title":"Object-Oriented Programing Part 1 - Example","prev":{"text":"Adavantages of OOP","link":"./oopadvantages"},"next":{"text":"Class","link":"./class"}},"headers":[],"relativePath":"coba/meeting-13/example.md","filePath":"coba/meeting-13/example.md"}'),n={name:"coba/meeting-13/example.md"},r=a('<h1 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h1><p>Let’s take an example of your <code>smartphone</code>!</p><p>Imagine you have a &quot;<strong>blueprint</strong>&quot; for making a smartphone. This &quot;blueprint&quot; lists what should be in a phone: what <strong>brand</strong> it is, its <strong>model</strong>, <strong>color</strong>, how much <strong>memory</strong> it has, and how big the screen is.</p><p>Now, each actual phone is like a printout from this &quot;blueprint&quot;. For example, your phone is a printout from that &quot;blueprint&quot;. Other phones are too, but they&#39;re different colors, brands, and models.</p><p>So, the &quot;blueprint&quot; is like a <strong>guide</strong> that shows what should be in a phone, and the phone you hold is one of the <strong>printouts</strong> that follows the instructions in that &quot;blueprint&quot;.</p>',5),s=[r];function i(l,p,h,u,m,c){return o(),e("div",null,s)}const _=t(n,[["render",i]]);export{g as __pageData,_ as default};
