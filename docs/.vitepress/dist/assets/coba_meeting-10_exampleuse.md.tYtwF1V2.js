import{_ as e,c as t,o as n,U as a}from"./chunks/framework.EUmXWpxD.js";const s="/assets/sandwich.WN_rqTSX.png",g=JSON.parse('{"title":"Function - Example of Use","description":"","frontmatter":{"layout":"doc","title":"Function - Example of Use","prev":{"text":"Introduction","link":"./introduction"},"next":{"text":"Types of Function","link":"./functiontype"}},"headers":[],"relativePath":"coba/meeting-10/exampleuse.md","filePath":"coba/meeting-10/exampleuse.md"}'),i={name:"coba/meeting-10/exampleuse.md"},o=a('<h1 id="example-of-use" tabindex="-1">Example of Use <a class="header-anchor" href="#example-of-use" aria-label="Permalink to &quot;Example of Use&quot;">â€‹</a></h1><p>Imagine you&#39;re making a sandwich. You have distinct steps: getting bread, adding ingredients like cheese, lettuce, and meat, and finally assembling it. Each step is like a function.<br><img src="'+s+'" alt="sandwich"></p><ul><li><strong>Functionality:</strong> Functions are like individual steps in making a sandwich. They encapsulate specific actions.</li><li><strong>Reuse:</strong> You can make different types of sandwiches using the same steps (functions) but with different ingredients.</li><li><strong>Abstraction:</strong> You don&#39;t need to know how each ingredient is processed; you just focus on the step (function) needed.</li><li><strong>Organization:</strong> Functions allow you to manage and understand the process of making a sandwich in a structured manner, just as functions organize code</li></ul>',3),c=[o];function r(l,d,u,p,m,f){return n(),t("div",null,c)}const h=e(i,[["render",r]]);export{g as __pageData,h as default};
