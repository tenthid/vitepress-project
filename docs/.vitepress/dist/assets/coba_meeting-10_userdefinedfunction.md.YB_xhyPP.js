import{_ as n,c as i,o as e,U as t}from"./chunks/framework.EUmXWpxD.js";const k=JSON.parse('{"title":"Function - User-defined Function","description":"","frontmatter":{"layout":"doc","title":"Function - User-defined Function","prev":{"text":"Built-in Function","link":"./builtinfunction"},"next":{"text":"Defining Function","link":"./definingfunction"}},"headers":[],"relativePath":"coba/meeting-10/userdefinedfunction.md","filePath":"coba/meeting-10/userdefinedfunction.md"}'),s={name:"coba/meeting-10/userdefinedfunction.md"},a=t(`<h1 id="user-defined-function" tabindex="-1">User-defined Function <a class="header-anchor" href="#user-defined-function" aria-label="Permalink to &quot;User-defined Function&quot;">​</a></h1><h2 id="defining-function" tabindex="-1">Defining Function <a class="header-anchor" href="#defining-function" aria-label="Permalink to &quot;Defining Function&quot;">​</a></h2><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">return_type </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">function_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parameters) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    //</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> Function </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">body</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    // Perform actions</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> something;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><strong>return_type:</strong> The data type of the value the function will return (e.g., int, float, void for no return).</li><li><strong>function_name:</strong> The name of the function.</li><li><strong>parameters:</strong> The input variables or arguments passed to the function (optional).</li></ul><h2 id="calling-function" tabindex="-1">Calling Function <a class="header-anchor" href="#calling-function" aria-label="Permalink to &quot;Calling Function&quot;">​</a></h2><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arguments);</span></span></code></pre></div><ul><li>function_name: The name of the function to be called.</li><li>arguments: The input values or variables passed to the function if it requires any parameters (optional).</li></ul>`,7),o=[a];function l(r,c,h,d,u,p){return e(),i("div",null,o)}const g=n(s,[["render",l]]);export{k as __pageData,g as default};
