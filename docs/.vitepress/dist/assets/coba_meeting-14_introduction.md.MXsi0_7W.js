import{_ as e,c as t,o,U as n}from"./chunks/framework.EUmXWpxD.js";const i="/assets/oop-concepts.h8y5uLOy.png",g=JSON.parse('{"title":"Object-Oriented Programing Part 2 - Introduction","description":"","frontmatter":{"layout":"doc","title":"Object-Oriented Programing Part 2 - Introduction","prev":{"text":"Meeting 13 - Final Exercise","link":"../meeting-13/exercise"},"next":{"text":"Encapsulation","link":"./encapsulation"}},"headers":[],"relativePath":"coba/meeting-14/introduction.md","filePath":"coba/meeting-14/introduction.md"}'),a={name:"coba/meeting-14/introduction.md"},c=n('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><p>Do you remember <code>about the object-oriented programming (OOP)</code> that we’ve learned in the previous meeting? Let&#39;s jog our memories by answering these review questions!</p><div class="info custom-block"><p class="custom-block-title">Questions</p><ol><li>What distinguishes a class from an object?</li><li>What elements can a class hold?</li><li>What&#39;s essential in a class for creating an object?</li><li>How do we bring an object into existence?</li></ol></div><p>Today, let&#39;s learn about the <code>4 fundamental concepts</code> in OOP. <img src="'+i+'" alt="oop-conscepts"></p>',4),s=[c];function r(l,d,u,m,p,_){return o(),t("div",null,s)}const b=e(a,[["render",r]]);export{g as __pageData,b as default};
