import{_ as a,c as i,o as s,U as l}from"./chunks/framework.EUmXWpxD.js";const E=JSON.parse('{"title":"Function - Local vs Global Variables in Function","description":"","frontmatter":{"layout":"doc","title":"Function - Local vs Global Variables in Function","prev":{"text":"Defining Function","link":"./definingfunction"},"next":{"text":"Exercise","link":"./exercise"}},"headers":[],"relativePath":"coba/meeting-10/localglobalvariable.md","filePath":"coba/meeting-10/localglobalvariable.md"}'),n={name:"coba/meeting-10/localglobalvariable.md"},e=l(`<h1 id="local-vs-global-variables-in-function" tabindex="-1">Local vs Global Variables in Function <a class="header-anchor" href="#local-vs-global-variables-in-function" aria-label="Permalink to &quot;Local vs Global Variables in Function&quot;">​</a></h1><h2 id="local-variables" tabindex="-1">Local Variables <a class="header-anchor" href="#local-variables" aria-label="Permalink to &quot;Local Variables&quot;">​</a></h2><ul><li>Local variables are declared within a specific block of code, such as within a function or a compound statement.</li><li>Their scope is limited to the block in which they are declared. They exist only within the block in which they are defined and cannot be accessed outside of that block.</li><li>They are created when the block is entered and destroyed when the block is exited.</li></ul><h2 id="global-variables" tabindex="-1">GLobal Variables <a class="header-anchor" href="#global-variables" aria-label="Permalink to &quot;GLobal Variables&quot;">​</a></h2><ul><li>Global variables are declared outside of any function or block, usually at the beginning of the program.</li><li>They can be accessed by any function or block within the entire program. They have a global scope.</li><li>They exist throughout the lifetime of the program</li></ul><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalVar </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> myFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    // Local variable</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> localVar </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Local variable inside function: %d\\n&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, localVar);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Global variable in main: %d\\n&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, globalVar);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    myFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>Try to print the globalVar inside the function</li><li>Try to print the localVar inside the main() function, after the myFunction()</li></ul>`,8),t=[e];function h(o,r,p,c,k,d){return s(),i("div",null,t)}const g=a(n,[["render",h]]);export{E as __pageData,g as default};
