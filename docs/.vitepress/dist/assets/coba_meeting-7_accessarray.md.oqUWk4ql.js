import{_ as a,c as e,o as t,U as s}from"./chunks/framework.EUmXWpxD.js";const g=JSON.parse('{"title":"Static Array - Access Array","description":"","frontmatter":{"layout":"doc","title":"Static Array - Access Array","prev":{"text":"Initialize Array","link":"./initializearray"},"next":{"text":"Show the Value in Array","link":"./showarrayvalue"}},"headers":[],"relativePath":"coba/meeting-7/accessarray.md","filePath":"coba/meeting-7/accessarray.md"}'),i={name:"coba/meeting-7/accessarray.md"},r=s('<h1 id="access-array" tabindex="-1">Access Array <a class="header-anchor" href="#access-array" aria-label="Permalink to &quot;Access Array&quot;">​</a></h1><h2 id="general-syntax" tabindex="-1">General Syntax <a class="header-anchor" href="#general-syntax" aria-label="Permalink to &quot;General Syntax&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dataType value = arrayName[index];</span></span></code></pre></div><ul><li><strong>dataType:</strong> The type of the value you&#39;re retrieving from the array.</li><li><strong>value:</strong> The variable where the retrieved value from the array is stored.</li><li><strong>arrayName:</strong> The name of the array you want to access.</li><li><strong>index:</strong> The position (or index) of the element you want to access. Indices usually start from 0.</li></ul><h2 id="example-c-c-java" tabindex="-1">Example (C/C++/Java) <a class="header-anchor" href="#example-c-c-java" aria-label="Permalink to &quot;Example (C/C++/Java)&quot;">​</a></h2><p>Retrieves the value at the third position (index 2) in the array &quot;numbers&quot; and assigns it to the variable &quot;value.&quot;</p><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numbers[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div>',7),n=[r];function l(o,c,h,p,d,u){return t(),e("div",null,n)}const m=a(i,[["render",l]]);export{g as __pageData,m as default};
