import{_ as e,c as a,o as t,U as n}from"./chunks/framework.EUmXWpxD.js";const g=JSON.parse('{"title":"Mid Test - Case","description":"","frontmatter":{"layout":"doc","title":"Mid Test - Case","prev":{"text":"Meeting 7 - Exercise","link":"../meeting-7/exercise"},"next":{"text":"Meeting 9 - Introduction","link":"../meeting-9/introduction"}},"headers":[],"relativePath":"coba/meeting-8/case.md","filePath":"coba/meeting-8/case.md"}'),s={name:"coba/meeting-8/case.md"},i=n(`<h1 id="case" tabindex="-1">Case <a class="header-anchor" href="#case" aria-label="Permalink to &quot;Case&quot;">​</a></h1><p>You&#39;re tasked with developing a financial management tool—a virtual financial assistant—designed to streamline personal finance tracking. This program, crafted in <code>C</code>, <code>C++</code>, or <code>Java</code>, presents users with a menu-driven interface offering options to record incomes, expenses, review financial transactions, and exit the program. The challenge lies in creating an intuitive system that accurately captures user inputs, maintains organized records of incomes and expenses, ensures input validation, and delivers informative financial summaries.</p><div class="info custom-block"><p class="custom-block-title">Develop a financial management program that presents users with the following main menu options:</p><ol><li>Record Income</li><li>Record Expense</li><li>View Income and Expenses</li><li>Exit</li></ol></div><p>Ensure that the input lies <strong>between 1 and 4 inclusive</strong>. If the input is invalid, <strong>re-display the menu</strong> until a valid input is made.</p><h2 id="upon-choosing" tabindex="-1">Upon choosing <a class="header-anchor" href="#upon-choosing" aria-label="Permalink to &quot;Upon choosing&quot;">​</a></h2><details class="details custom-block"><summary><strong>Option 1</strong></summary><p>Prompt the user to input their income amount and store it in an array named &#39;incomes&#39;. Return to the main menu afterward.</p></details><details class="details custom-block"><summary><strong>Option 2</strong></summary><p>Prompt the user to input their expense amount and store it in an array named &#39;expenses&#39;. Return to the main menu afterward.</p></details><details class="details custom-block"><summary><strong>Option 3</strong></summary><p>Display all recorded incomes from the &#39;incomes&#39; array, followed by their total. Then display all recorded expenses from the &#39;expenses&#39; array, followed by their total. Finally, present the cashflow result (income - expense) as the final output.</p><ul><li><u>For example:</u></li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Incomes: Rp10000, Rp40000, Rp50000</span></span>
<span class="line"><span>Total Income: Rp100000</span></span>
<span class="line"><span>Expenses: Rp5000, Rp15000, Rp10000</span></span>
<span class="line"><span>Total Expenses: Rp30000</span></span>
<span class="line"><span>Cashflow: Rp70000</span></span></code></pre></div><p>Return to the main menu afterward.</p></details><details class="details custom-block"><summary><strong>Option 4</strong></summary><p>isplay the message &quot;Thank you for using this service&quot; and terminate the program.</p></details><p>Construct a robust solution in <code>C</code>, <code>C++</code>, or <code>Java</code> ensuring accurate input handling, array management for income and expense records, clear output formatting, and a seamless user experience. The assessment will focus on functionality, validation, output clarity, and overall program reliability.</p><p><strong>The things that you need to create:</strong></p><ol><li>Algorithm in written description</li><li>Algorithm in pseudocode</li><li>Algorithm in flowchart</li><li>Code</li></ol><div class="info custom-block"><p class="custom-block-title">Note</p><p>For number 1-3, please put it in a word file. For number 4 submit the code file (.c/.cpp/.java). Then submit it to the teacher.</p></div><h1 id="good-luck" tabindex="-1">GOOD LUCK!!! <a class="header-anchor" href="#good-luck" aria-label="Permalink to &quot;GOOD LUCK!!!&quot;">​</a></h1>`,14),o=[i];function r(l,c,p,d,m,u){return t(),a("div",null,o)}const f=e(s,[["render",r]]);export{g as __pageData,f as default};
